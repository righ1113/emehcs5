; > loadFile ./sample/bf.eme

(=pro =i =stop =sign =brk =d
  (pro i !!) =pro_i
    ; 関数合成を二段階使っている
      ((d (d sign -) (pro_i }@ eq) ?) (d sign +) (pro_i {@ eq) ?)
        (brk sign stop (i sign +) pro #)
          ((pro_edge@ error) (i stop eq) ?) i ((d 0 eq) (pro_i brk eq) &&) ?) >#

(=out =pc =mem =mar =pro
  ((pro length) 1 -) =max
    (pro pc !!) =op
      (mem mar !!) =mem_v
        (0 {@ -1 0  (pc 1 -) pro #) >move_pc2
          (0 }@ 1 max (pc 1 +) pro #) >move_pc1
            ((pro mar mem (pc 1 +) out bf0) out (pc max eq) ?) >^
              ^
              ((move_pc2 =pc ^)  ((mem_v 0 !=) (op }@ eq) &&) ?)
                ((move_pc1 =pc ^)  ((mem_v 0 eq) (op {@ eq) &&) ?)
                  (((out (mem_v chr) cons) =out ^) (op .@ eq)     ?)
                    (((mem mar -1 up_p)      =mem ^) (op -@ eq)     ?)
                      (((mem mar 1 up_p)       =mem ^) (op +@ eq)     ?)
                        (((mar 1 -)              =mar ^) (op <@ eq)     ?)
                          (((mar 1 +)              =mar ^) (op r@ eq)     ?)) >bf0

++++++++{r++++{r++r+++r+++r+<<<<-}r+r+r-rr+{<}<-}rr.r---.+++++++..+++.rr.<-.<.+++.------.--------.rr+.r++.@ =c
; +++{r++<-}r.@ =c
c 0 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] 0 [] bf0
